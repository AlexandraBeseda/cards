{"version":3,"sources":["a1_main/b1_ui/common/c1-SuperInputText/SuperInputText.module.css","a1_main/b1_ui/components/Error404/Error404.module.css","a1_main/b1_ui/common/c2-SuperButton/SuperButton.module.css","a1_main/b1_ui/common/c3-SuperCheckbox/SuperCheckbox.module.css","a1_main/b1_ui/common/c4-SuperEditableSpan/SuperEditableSpan.module.css","a1_main/b1_ui/common/c5-SuperSelect/SuperSelect.module.css","a1_main/b1_ui/common/c6-SuperRadio/SuperRadio.module.css","a1_main/b2_bll/store.ts","a1_main/b1_ui/header/Header.tsx","a1_main/b1_ui/components/Login/Login.tsx","a1_main/b1_ui/components/Profile/Profile.tsx","a1_main/b1_ui/components/Error404/Error404.tsx","a1_main/b1_ui/components/PasswordCreate/PasswordCreate.tsx","a1_main/b1_ui/common/c1-SuperInputText/SuperInputText.tsx","a1_main/b1_ui/common/c2-SuperButton/SuperButton.tsx","a1_main/b1_ui/common/c3-SuperCheckbox/SuperCheckbox.tsx","a1_main/b1_ui/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","a1_main/b1_ui/common/c5-SuperSelect/SuperSelect.tsx","a1_main/b1_ui/common/c6-SuperRadio/SuperRadio.tsx","a1_main/b1_ui/components/TestComponents/TestComponents.tsx","a1_main/b1_ui/components/PasswordEnter/PasswordEnter.tsx","a1_main/b1_ui/routes/Routes.tsx","a1_main/b1_ui/App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","rootReducer","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","window","PATH","Header","to","Login","Profile","Error404","className","s","main","text","hitFloor","PasswordCreate","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","e","currentTarget","value","key","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","onChangeCallback","checked","checkbox","SuperEditableSpan","autoFocus","onBlur","spanProps","useState","editMode","setEditMode","onDoubleClick","restSpanProps","createdForSuperSpan","SuperSelect","options","onChangeOption","mappedOptions","map","opt","index","select","SuperRadio","name","o","i","form_radio_btn","TestComponents","PasswordEnter","Routes","exact","path","render","from","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.82226598.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3Bf1D\",\"errorInput\":\"SuperInputText_errorInput__2umWM\",\"error\":\"SuperInputText_error__2K9ig\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Error404_main__20gpp\",\"text\":\"Error404_text__23Bjq\",\"hitFloor\":\"Error404_hitFloor__2zDc3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3fIHu\",\"red\":\"SuperButton_red__2HT2b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__3DlTd\",\"spanClassName\":\"SuperCheckbox_spanClassName__3uR1D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"createdForSuperSpan\":\"SuperEditableSpan_createdForSuperSpan__3PQjW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"SuperSelect_select__1YQL6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_radio_btn\":\"SuperRadio_form_radio_btn__ipmxe\"};","\r\nimport {applyMiddleware, combineReducers, createStore} from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\n\r\n// объединяя reducer-ы с помощью combineReducers,\r\n// мы задаём структуру нашего единственного объекта-состояния\r\nconst rootReducer = combineReducers({\r\n    //tasks: tasksReducer,\r\n})\r\n// непосредственно создаём store\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n// определить автоматически тип всего объекта состояния\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n// а это, чтобы можно было в консоли браузера обращаться к store в любой момент\r\n// @ts-ignore\r\nwindow.store = store;\r\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nexport const PATH = {\r\n    LOGIN: '/',\r\n    REGISTRATION: '/registration',\r\n    PROFILE: '/profile',\r\n    ERROR404: '/error404',\r\n    PASSWORD_CREATE: '/createPassword',\r\n    PASSWORD_ENTER: '/enterPassword',\r\n    TEST_COMPONENTS: '/testSuperComponents',\r\n}\r\n\r\nexport const Header: React.FC = () => {\r\n    return (<div>\r\n        <div>\r\n            <NavLink to={PATH.LOGIN}>Login</NavLink>\r\n        </div>\r\n        <div>\r\n            <NavLink to={PATH.REGISTRATION}>Registration</NavLink>\r\n        </div>\r\n        <div>\r\n            <NavLink to={PATH.PROFILE}>Profile</NavLink>\r\n        </div>\r\n        <div>\r\n            <NavLink to={PATH.ERROR404}>Error 404</NavLink>\r\n        </div>\r\n        <div>\r\n            <NavLink to={PATH.PASSWORD_CREATE}>Create new password</NavLink>\r\n        </div>\r\n        <div>\r\n            <NavLink to={PATH.PASSWORD_ENTER}>Enter new password</NavLink>\r\n        </div>\r\n        <div>\r\n            <NavLink to={PATH.TEST_COMPONENTS}>Test</NavLink>\r\n        </div>\r\n    </div>)\r\n}","import React from \"react\";\r\n\r\nexport const Login:React.FC=()=>{\r\n    return(\r\n        <div></div>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport const Profile:React.FC=()=>{\r\n    return(\r\n        <div></div>\r\n    )\r\n}","import React from 'react'\r\nimport s from './Error404.module.css'\r\n\r\nexport const Error404:React.FC=()=> {\r\n    return (\r\n        <div className={s.main}>\r\n            <div className={s.text}>404</div>\r\n            <div className={s.hitFloor}>Page not found!</div>\r\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from \"react\";\r\n\r\nexport const PasswordCreate:React.FC=()=>{\r\n    return(\r\n        <div></div>\r\n    )\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText // если есть пропс onChangeText\r\n        && onChangeText(e.currentTarget.value)// то передать ему e.currentTarget.value (поскольку onChangeText не обязателен)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.errorInput} ${error?s.errorInput:s.superInput} ${className}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange,  onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={(e)=>onChangeCallback(e)}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\r\nimport SuperInputText from '../c1-SuperInputText/SuperInputText';\r\nimport s from \"./SuperEditableSpan.module.css\"\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n}\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\r\n\r\n    const onEnterCallback = () => {\r\n        setEditMode(false) // выключить editMode при нажатии Enter\r\n\r\n        onEnter && onEnter()\r\n    }\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        setEditMode(false) // выключить editMode при нажатии за пределами инпута\r\n\r\n        onBlur && onBlur(e)\r\n    }\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        setEditMode(true); // включить editMode при двойном клике\r\n\r\n        onDoubleClick && onDoubleClick(e)\r\n    }\r\n\r\n    const spanClassName = `${s.createdForSuperSpan}`\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    <SuperInputText\r\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                    />\r\n                ) : (\r\n                    <span\r\n                        onDoubleClick={onDoubleClickCallBack}\r\n                        className={spanClassName}\r\n\r\n                        {...restSpanProps}\r\n                    >❤\r\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                        {children || restProps.value}\r\n                    </span>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperEditableSpan\r\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react';\r\nimport s from \"./SuperSelect.module.css\"\r\n\r\n\r\n//стандартные пропсы для select\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n    {\r\n        options,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n\r\n    const mappedOptions: any[] = options ? options.map((opt, index) =>\r\n        <option value={opt} key={opt + '-' + index}>{opt}</option>\r\n    ) : []; // map options with key\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        onChange && onChange(e);\r\n        onChangeOption && onChangeOption(e.currentTarget.value);\r\n        // onChange, onChangeOption\r\n    }\r\n\r\n    return (\r\n        <select className={s.select} onChange={onChangeCallback} {...restProps}>\r\n            {mappedOptions}\r\n        </select>\r\n    )\r\n}\r\n\r\nexport default SuperSelect\r\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react';\r\nimport s from \"./SuperRadio.module.css\"\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        type, name,\r\n        options, value,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e);\r\n       onChangeOption && onChangeOption(e.currentTarget.value);\r\n        // onChange, onChangeOption\r\n    }\r\n\r\n\r\n    //тернарное выражение\r\n    //если options true тоггда мапить\r\n    //если false тогда вернуть пустой массив\r\n    const mappedOptions: any[] = options ? options.map((o, i) => ( // map options with key\r\n        <label  key={name + '-' + i}>\r\n            <input\r\n                type={'radio'}\r\n                name={name}\r\n                checked={o===value}\r\n                value={o}\r\n                // name, checked, value, onChange\r\n                onChange={onChangeCallback}\r\n            />\r\n            {o}\r\n        </label>\r\n    )) : []\r\n\r\n    return (\r\n        <div className={s.form_radio_btn}>\r\n            {mappedOptions}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SuperRadio\r\n","import React from \"react\";\r\nimport SuperInputText from \"../../common/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../common/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"../../common/c3-SuperCheckbox/SuperCheckbox\";\r\nimport SuperEditableSpan from \"../../common/c4-SuperEditableSpan/SuperEditableSpan\";\r\nimport SuperSelect from \"../../common/c5-SuperSelect/SuperSelect\";\r\nimport SuperRadio from \"../../common/c6-SuperRadio/SuperRadio\";\r\nimport SuperRange from \"../../common/c7-SuperRange/SuperRange\";\r\nimport SuperDoubleRange from \"../../common/c8-SuperDoubleRange/SuperDoubleRange\";\r\n\r\nexport const TestComponents:React.FC=()=>{\r\n    return(\r\n        <div>\r\n            <SuperInputText/>\r\n            <SuperButton/>\r\n            <SuperCheckbox/>\r\n            <SuperEditableSpan/>\r\n            <SuperSelect/>\r\n            <SuperRadio/>\r\n            {/*yarn add rc-slider*/}\r\n            {/*<SuperRange setValue1={} value={} max={} min={} step={}/>\r\n            <SuperDoubleRange setValue1={} setValue2={} max={} min={} step={}/>*/}\r\n\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport const PasswordEnter:React.FC=()=>{\r\n    return(\r\n        <div></div>\r\n    )\r\n}","import React from \"react\";\r\nimport {PATH} from \"../header/Header\";\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport {Login} from \"../components/Login/Login\";\r\nimport {Profile} from \"../components/Profile/Profile\";\r\nimport {Error404} from \"../components/Error404/Error404\";\r\nimport {PasswordCreate} from \"../components/PasswordCreate/PasswordCreate\";\r\nimport {TestComponents} from \"../components/TestComponents/TestComponents\";\r\nimport {PasswordEnter} from \"../components/PasswordEnter/PasswordEnter\";\r\n\r\n\r\nexport const Routes: React.FC = () => {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route exact path={PATH.LOGIN} render={() => <Login/>}/>\r\n                <Route path={PATH.PROFILE} render={() => <Profile/>}/>\r\n                <Route path={PATH.PASSWORD_CREATE} render={() => <PasswordCreate/>}/>\r\n                <Route path={PATH.PASSWORD_ENTER} render={() => <PasswordEnter/>}/>\r\n                <Route path={PATH.TEST_COMPONENTS} render={() => <TestComponents/>}/>\r\n                <Route path={PATH.ERROR404} render={() => <Error404/>}/>\r\n                <Redirect from={\"*\"} to={PATH.ERROR404}/>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport './App.css';\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"../b2_bll/store\";\nimport {Header} from \"./header/Header\";\nimport {Routes} from \"./routes/Routes\";\n\nconst App = () => {\n    return (\n        <div className=\"App\">\n            {/* HashRouter/(BrowserRouter) создает объект history который хранит путь к текущему location[1]\n            и перерисовывает интерфейс сайта когда происходят какие то изменения пути.\n            Остальные функции предоставляемые в React Router полагаются на доступность объекта history через context,\n             поэтому они должны рендериться внутри компонента Router.\n             Компоненты React Router не имеющие в качестве предка компонент Router не будут работать, так как не будет доступен context.*/}\n            <HashRouter>\n                {/*https://reactrouter.com/web/api/HashRouter*/}\n                {/*https://ru.stackoverflow.com/questions/997296/%D0%92-%D1%87%D0%B5%D0%BC-%D1%80%D0%B0%D0%B7%D0%BD%D0%B8%D1%86%D0%B0-%D0%BC%D0%B5%D0%B6%D0%B4%D1%83-react-router-browserrouter-%D0%B8-hashrouter*/}\n                {/*Для браузерных проектов есть BrowserRouter и HashRouter компоненты.\n                BrowserRouter — следует использовать когда вы обрабатываете на сервере динамические запросы,\n                а HashRouter используйте когда у вас статический веб сайт.*/}\n                <Provider store={store}>\n                    {/*тут будем хранить навлинки для переходов*/}\n                    <Header/>\n                    <Routes/>\n\n                </Provider>\n            </HashRouter>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './a1_main/b1_ui/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}